
name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: ["main"]
  #pull_request:
    #branches: ["main"]

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '22.0.1'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.1' # you can also specify exact version of flutter
          # channel: 'beta' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub cache clean
      - run: flutter channel stable
      - run: flutter pub get

      - run: |
          touch .env
          echo ROOTSTOCK_NODE=${{ secrets.ROOTSTOCK_NODE }} >> .env
          echo BLOCK_EXPLORER_URL=${{ secrets.BLOCK_EXPLORER_URL }} >> .env
          cat .env

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

      # Run widget tests for our flutter project.
      - run: flutter test

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v4
        with:
          name: apk
          path: build/app/outputs/apk/release/app-release.apk

  release:
    name: Release APK
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.event.repository.name }} v${{ github.run_number }}
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip